name: Release

on:
  workflow_dispatch:

jobs:
  build-and-deploy-tss:
    name: Build and deploy
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-tss-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-tss-

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        id: docker_build
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/utconnect_tss_fe:latest
          build-args: |
            APP_NAME=tss
            BUILD_ENV=${{ secrets.BUILD_ENV }}
            BASE_URL=${{ secrets.BASE_URL }}
            SYNCFUSION_LICENSE=${{ secrets.SYNCFUSION_LICENSE }}
            RECAPTCHA__SITE_KEY=${{ secrets.RECAPTCHA__SITE_KEY }}
            DEFAULT_PASSWORD=${{ secrets.DEFAULT_PASSWORD }}
            PUSHER__KEY=${{ secrets.PUSHER__KEY }}
            PUSHER__CLUSTER=${{ secrets.PUSHER__CLUSTER }}

  build-and-deploy-esm:
    name: Build and deploy
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-esm-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-esm-

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        id: docker_build
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/utconnect_tss_fe:latest
          build-args: |
            APP_NAME=tss
            BUILD_ENV=${{ secrets.BUILD_ENV }}
            BASE_URL=${{ secrets.BASE_URL }}
            SYNCFUSION_LICENSE=${{ secrets.SYNCFUSION_LICENSE }}
            RECAPTCHA__SITE_KEY=${{ secrets.RECAPTCHA__SITE_KEY }}
            DEFAULT_PASSWORD=${{ secrets.DEFAULT_PASSWORD }}
            PUSHER__KEY=${{ secrets.PUSHER__KEY }}
            PUSHER__CLUSTER=${{ secrets.PUSHER__CLUSTER }}

  release:
    name: Release
    needs: build-and-deploy-tss
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Config git
        run: |
          git config --global user.email "snowflower1408@gmail.com"
          git config --global user.name "Release workflow"

      - name: Release new version
        run: npx --yes standard-version -a

      - name: Push new version
        run: |
          git push --follow-tags origin main
